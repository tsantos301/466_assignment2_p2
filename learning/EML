//HTML Intro ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
"<title>Introduction:</title>
<text>
    This is a primer in a series of tutorials that will calmly introduce you to the very basics
    of <strong>H</strong>yper<strong>T</strong>ext <strong>M</strong>ark-up <strong>L</strong>anguage. Eventually, you'll easily know enough to create your own HTML web page.<br>
    <br>
    <i>The following are the main sections and ideas for this tutorial:</i>
</text>
<bullets>
    <bullet> Hello World - easing into your first page. </bullet>
    <bullet> Document Types - Learning the foundations of a web page</bullet>
    <bullet> Comments and Tags - Making readable code, and understanding tags</bullet>
    <bullet> Links - intro to navigating the web</bullet>
    <bullet> Paragraphs and lists - intro to some page essentials</bullet>
    <bullet> Tables - getting a little bit more technical</bullet>
    <bullet> Forms - a common item used in many sites </bullet>
</bullets>
"

//Hello World ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
"
<title>Hello World:</title>
<text>
    This first step to take when learning any programming language is to
    write a basic "hello world" program which prints text to the screen.

    The code to do so is shown in the code block below, and can be run
    within the website.

</text>

<example>
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Hello World.</title>
    </head>
    <body>
    Hello World.
    </body>
    </html>

</example>
<subtitle> Running the above code gives us: </subtitle>
<iframe src="../HTML_examples/helloEx.html"> </iframe>
"

//Document Types ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
"
<title>Document Types:</title>
<text>
    The document type declaration (DOCTYPE) in line 1 is required in HTML5 documents so that browsers render the page in standards mode, according to the HTML and CSS specifications. Some browsers operate in quirks mode to maintain backward compatibility with web pages that are not up-to-date with the latest standards. You’ll include the DOCTYPE in each HTML5 document you create.
</text>

<subtitle> Blank Lines: </subtitle>
<text>Blank lines, tabs, and general whitespace is ommited by html in default unless the tag being used is: <example><pre></pre></example></text>

"
//Comments and Tags ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

"
<title>Comments and Tags:</title>

<subtitle id=\"h1\">Comments:</subtitle>

<example class=\"example\"><!--This is a comment--></example>
<text>
    The example shown above is an HTML5 comment. You’ll insert comments in your HTML5 markup to improve readability and
    describe the content of a document. The browser ignores comments when your document is rendered. HTML5 comments
    start with \"!--\" and end with \"--\". Comments should be used to explain the purpose of confusing block of code,
    or also as a reminder of what our code is doing, so that if you need to edit it 5 years from now, it will be easy to
    see how everything is working at a glance.
</text>

<title> Document Elements and Tags: </title>
<subtitle>HTML, Head and Body Elements: </subtitle>
<text>HTML5 markup contains text (and images, graphics, animations, audios and videos) that represents the content of a
    document and elements that specify a document’s structure and meaning. Some important elements are the html element,
    the head element and the body element. The html element encloses all sections of an HTML file . The head section
    contains information about the HTML5 document, such as the character set: UTF-8, the
    most popular character-encoding scheme for the web. The head section also can contain special document-formatting
    instructions called CSS3 style sheets and client-side programs called scripts for creating dynamic web pages. The
    body section contains the page’s content, which the browser displays when the user visits the web page.</text>

<subtitle>Start tags and End tags:</subtitle>
<text> HTML5 documents delimit most elements with a start tag and an end tag. A start tag consists of the element name in
    angle brackets. An end tag consists of the element name preceded by a forward slash (/) in angle brackets . There
    are several so-called “void elements” that do not have end tags. As you’ll soon see, many start tags have attributes
    that provide additional information about an element, which browsers use to determine how to process the element.
    Each attribute has a name and a value separated by an equals sign (=).</text>

<subtitle>The Following are some examples of tags:</subtitle>
<example class=\"example\">
    &lt;html&gt;&lt;/html&gt;
    &lt;p&gt;&lt;/p&gt;
    &lt;body&gt;&lt;/body&gt;
</example>
"

//Links ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
"
 <title>Links and Images:</title>
 <text>
     One of the most important HTML5 features is the hyperlink, which references other resources, such as
     HTML5 documents and images. When a user clicks a hyperlink, the browser tries to execute an action associated with
     it (for example, navigate to a URL or open an e-mail client). Any displayed element can act as a hyperlink. Web
     browsers typically underline text hyperlinks and color their text blue by default so that users can distinguish
     hyperlinks from plain text. <strong>Below is an example of creating hyperlinks:</strong>
 </text>
 <example class=\"example\">
    &lt;!DOCTYPE html&gt;
    &lt;html&gt;
    &lt;head&gt;
        &lt;meta charset = \"utf-8\"&gt;
        &lt;title&gt; Exercise 2.8 &lt;/title&gt;
    &lt;/head&gt;

    &lt;body&gt;
    &lt;h1&gt; My Favorite Daily Deals &lt;/h1&gt;
    &lt;ul&gt;
        &lt;li&gt;&lt;a href = \"http://www.amazon.ca\"&gt; Amazon&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href = \"http://www.ebay.ca\"&gt; eBay &lt;/a&gt; &lt;/li&gt;
        &lt;li&gt;&lt;a href = \"http://www.aliexpress.com\"&gt; Aliexpress &lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;

    &lt;/body&gt;

    &lt;/html&gt;

 </example>

 Running the above code gives us:
 <iframe src=\"../HTML_examples/2.8.html\" style=\"width:500px;height:200px;\"></iframe>
 <text align=\"middle\">Open the iFrame in a new window to use the links</text>
 <br>
 <subtitle>Images: </subtitle>
 <text> To simply display an image in an HTML document, one must find a suitable image and place it in the
 same directory as the html source file. Once this is complete the image can be emebedded in the page
 using the following:
 </text>
 <example class=\"example\">
     <img src=\"image_name.image_extension\" alt=\"Text to use as a placeholder incase the image is not found.\">
 </example>

 <text>
 To adjust the width, height or style of an image one simply uses the following attributes:
 </text>

 <example class=\"example\">
     <img src=\"../HTML_examples/Apple.png\" alt=\"Apple Classic Icon\" width=\"128px\" height=\"128px\">
 </example>

 <iframe src=\"../HTML_examples/appleEx.html\"></iframe>


 "

 // Paragraphs and Lists ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

 "

<title>Paragraphs and Lists: </title>
<text>
    One of the most important HTML5 features and also one of the simplest is the paragraph element.
    <br>
    The paragraph element allows text to be displayed on a webpage that automatically adjusts to the
    window size.
    <br>
    The page break element can be used to create new lines inside of a paragraph, since whitespace is automatically ommited.

</text>
<example class=\"example\">
    <!DOCTYPE html>
    <html>
    <head>
        <meta charset = \"utf-8\">
        <title> Understanding Whitespace </title>
    </head>

    <body>
    <h1> Paragraph one without a break element. </h1>
    <p>
        This is the first line of text.
        This is the second line of text.
        This is the third line of text.
    </p>

    <h1>Paragraph two without a break element</h1>
    <p>
        This is the first line of text.<br>
        This is the second line of text.<br>
        This is the third line of text.
    </p>

    </body>

    </html>

</example>

Running the above code gives us:
<iframe src=\"../HTML_examples/paragraph.html\" style='width:600px;height:300px'></iframe>
<br>

<subtitle>Lists: </subtitle>
<text>
   Lists are an equally important HTML concept. They allow us to present organized information and
    are the foundation for website navigation systems.<br>

    Lists can be numbered using the \"ol\" tag or bulleted using the \"ul\" tag. The first stands for
    ordered list and the second unordered list.
</text>

<example class=\"example\">
    <!DOCTYPE html>
    <html>
    <body>

    <h2>An unordered HTML list</h2>

    <ul>
        <li>Coffee</li>
        <li>Tea</li>
        <li>Milk</li>
    </ul>

    <h2>An ordered HTML list</h2>
    <ol>
        <li>Coffee</li>
        <li>Tea</li>
        <li>Milk</li>
    </ol>

    </body>
    </html>
</example>

<iframe src=\"../HTML_examples/lists.html\" style='width:600px;height:300px'></iframe>

 "

// Tables ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

"
<title>Tables: </title>
<text>
    An HTML table is defined with the \"table\" tag.<br>
    <br>
    Each table row is defined with the \"tr\" tag. A table header is defined with the \"th\" tag.<br>
    By default, table headings are bold and centered. A table data/cell is defined with the \"td\" tag.
</text>
<example class=\"example\">
    <!DOCTYPE html>
    <html>
    <body>

    <h2>HTML Table</h2>

    <table style=\"width:100%\">
        <tr>
            <th>Firstname</th>
            <th>Lastname</th>
            <th>Age</th>
        </tr>
        <tr>
            <td>Jill</td>
            <td>Smith</td>
            <td>50</td>
        </tr>
        <tr>
            <td>Eve</td>
            <td>Jackson</td>
            <td>94</td>
        </tr>
        <tr>
            <td>John</td>
            <td>Doe</td>
            <td>80</td>
        </tr>
    </table>

    </body>
    </html>

</example>

Running the above code gives us:
<iframe src=\"../HTML_examples/table.html\" style='width:600px;height:300px'></iframe>
<br>

"

// Forms ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
"

<title>Forms:</title>
<text>
    The HTML form element defines a form that is used to collect user input:
    An HTML form contains form elements.

    Form elements are different types of input elements, like text fields, checkboxes,
    radio buttons, submit buttons, and more.
</text>

<example class=\"example\">
    <!DOCTYPE html>
    <html lang=\"en\">
    <head>
        <meta charset=\"UTF-8\">
        <title>Forms.</title>
    </head>
    <body>
        <form>
            <input type=\"radio\" name=\"gender\" value=\"male\" checked> Male<br>
            <input type=\"radio\" name=\"gender\" value=\"female\"> Female<br>
            <input type=\"radio\" name=\"gender\" value=\"other\"> Other
        </form>
    </body>
    </html>

</example>
<title> Running the above code gives us: </title>
<iframe src=\"../HTML_examples/form1.html\"> </iframe>

<subtitle> Submitting Forms: </subtitle>
<text>
    Using, input type=\"submit\", will create a button for submitting the form data to a form handler.
    The form-handler is typically a server page with a script for processing input data.
    The form-handler is specified in the form's action attribute:
</text>
<text>
    The action attribute defines the action to be performed when the form is submitted.

    Normally, the form data is sent to a web page on the server when the user clicks on the submit button.

    To further understand actions one must first have a basic understanding of PHP.
</text>

"